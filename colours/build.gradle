plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'space.clau'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.hibernate.orm:hibernate-core:6.2.0.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    runtimeOnly 'org.hsqldb:hsqldb:2.6.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
task runDataLoader(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	mainClass = 'space.clau.colours.DataLoaderApplication'
}
task buildDataLoader(type: Jar) {
    archiveBaseName = 'data-loader'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from(sourceSets.main.output)
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'space.clau.colours.DataLoaderApplication'
    }
}

task buildMain(type: Jar) {
    archiveBaseName = 'liturgical-colours'
    from sourceSets.main.output
    include 'space/clau/colours/ColoursApplication.class'
}

bootRun {
    mainClass = 'space.clau.colours.ColoursApplication'
}

springBoot {
    mainClass = 'space.clau.colours.ColoursApplication'
}